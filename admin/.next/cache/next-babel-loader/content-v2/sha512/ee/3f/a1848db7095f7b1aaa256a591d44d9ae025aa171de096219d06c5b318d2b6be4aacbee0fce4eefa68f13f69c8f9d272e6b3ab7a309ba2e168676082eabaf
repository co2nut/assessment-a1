{"ast":null,"code":"var _jsxFileName = \"/Users/soonsionglim/Development/etern/admin/components/users/form.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useState } from 'react';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { Layout, Card, Row, Col, Form, Input, Button, Alert } from 'antd';\nimport SideBar from '../../components/SideBar';\nimport axios from \"axios\";\nimport Cookie from \"js-cookie\";\nimport { API_URL, login } from '../../api';\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\n\nconst App = props => {\n  const router = useRouter();\n  const {\n    0: formErr,\n    1: setFormErr\n  } = useState('');\n\n  const onFinish = values => {\n    const {\n      password,\n      confirmPassword,\n      username\n    } = values;\n\n    if (password !== confirmPassword) {\n      return setFormErr(\"Password & Confirm Password is not same\");\n    }\n\n    if (props.mode === 'update') {\n      return axios.put(`${API_URL}users/${props.data._id}`, {\n        username,\n        password,\n        roles: ['user'],\n        status: \"1\"\n      }, {\n        headers: {\n          'Authorization': `Bearer ${JSON.parse(Cookie.get(\"userInfo\")).accessToken}`\n        }\n      }).then(res => {\n        if (res.data) {\n          router.push('/users');\n        }\n      }).catch(err => {\n        setFormErr(\"Username already exists\");\n      });\n    }\n\n    axios.post(`${API_URL}users`, {\n      username,\n      password,\n      roles: ['user'],\n      status: \"1\"\n    }, {\n      headers: {\n        'Authorization': `Bearer ${JSON.parse(Cookie.get(\"userInfo\")).accessToken}`\n      }\n    }).then(res => {\n      if (res.data) {\n        router.push('/users');\n      }\n    }).catch(err => {\n      setFormErr(\"Username already exists\");\n      console.log(err);\n    });\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const {\n    username,\n    password\n  } = props.data;\n  return __jsx(React.Fragment, null, formErr ? __jsx(Alert, {\n    message: formErr,\n    closable: true,\n    type: \"error\",\n    showIcon: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 18\n    }\n  }) : null, __jsx(Card, {\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, __jsx(Form, _extends({}, layout, {\n    initialValues: {\n      username,\n      password: password,\n      confirmPassword: password\n    },\n    name: \"basic\",\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }), __jsx(Form.Item, {\n    label: \"Username\",\n    name: \"username\",\n    rules: [{\n      required: true,\n      message: 'Please input your username!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  })), __jsx(Form.Item, {\n    label: \"Password\",\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: 'Please input your password!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, __jsx(Input.Password, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  })), __jsx(Form.Item, {\n    label: \"Confirm Password\",\n    name: \"confirmPassword\",\n    rules: [{\n      required: true,\n      message: 'Please input confirm password!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, __jsx(Input.Password, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  })), __jsx(Form.Item, _extends({}, tailLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, props.mode === 'update' ? \"Update\" : \"Create\")), __jsx(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    onClick: () => {\n      router.push('/users');\n    },\n    type: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, \"Cancel\")))))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/soonsionglim/Development/etern/admin/components/users/form.js"],"names":["useState","Head","useRouter","Layout","Card","Row","Col","Form","Input","Button","Alert","SideBar","axios","Cookie","API_URL","login","layout","labelCol","span","wrapperCol","tailLayout","offset","App","props","router","formErr","setFormErr","onFinish","values","password","confirmPassword","username","mode","put","data","_id","roles","status","headers","JSON","parse","get","accessToken","then","res","push","catch","err","post","console","log","onFinishFailed","errorInfo","marginTop","required","message"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,GAAvB,EAA4BC,GAA5B,EAAiCC,IAAjC,EAAuCC,KAAvC,EAA8CC,MAA9C,EAAsDC,KAAtD,QAAmE,MAAnE;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,WAA/B;AAGA,MAAMC,MAAM,GAAG;AACbC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAE;AADE,GADG;AAIbC,EAAAA,UAAU,EAAE;AACVD,IAAAA,IAAI,EAAE;AADI;AAJC,CAAf;AAQA,MAAME,UAAU,GAAG;AACjBD,EAAAA,UAAU,EAAE;AACVE,IAAAA,MAAM,EAAE,CADE;AAEVH,IAAAA,IAAI,EAAE;AAFI;AADK,CAAnB;;AAOA,MAAMI,GAAG,GAAIC,KAAD,IAAW;AACrB,QAAMC,MAAM,GAAGtB,SAAS,EAAxB;AACA,QAAM;AAAA,OAACuB,OAAD;AAAA,OAAUC;AAAV,MAAwB1B,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAM2B,QAAQ,GAAIC,MAAD,IAAY;AAC3B,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,eAAZ;AAA6BC,MAAAA;AAA7B,QAA2CH,MAAjD;;AACA,QAAIC,QAAQ,KAAKC,eAAjB,EAAkC;AAChC,aAAOJ,UAAU,CAAC,yCAAD,CAAjB;AACD;;AAED,QAAGH,KAAK,CAACS,IAAN,KAAe,QAAlB,EAA2B;AACzB,aAAOpB,KAAK,CAACqB,GAAN,CAAW,GAAEnB,OAAQ,SAAQS,KAAK,CAACW,IAAN,CAAWC,GAAI,EAA5C,EACL;AACEJ,QAAAA,QADF;AAEEF,QAAAA,QAFF;AAGEO,QAAAA,KAAK,EAAC,CAAC,MAAD,CAHR;AAIEC,QAAAA,MAAM,EAAC;AAJT,OADK,EAOL;AACEC,QAAAA,OAAO,EAAE;AACP,2BAAkB,UAASC,IAAI,CAACC,KAAL,CAAW3B,MAAM,CAAC4B,GAAP,CAAW,UAAX,CAAX,EAAmCC,WAAY;AADnE;AADX,OAPK,EAaNC,IAbM,CAaAC,GAAD,IAAS;AACb,YAAGA,GAAG,CAACV,IAAP,EAAY;AACVV,UAAAA,MAAM,CAACqB,IAAP,CAAY,QAAZ;AACD;AACF,OAjBM,EAkBNC,KAlBM,CAkBCC,GAAD,IAAS;AACdrB,QAAAA,UAAU,CAAC,yBAAD,CAAV;AACD,OApBM,CAAP;AAqBD;;AACDd,IAAAA,KAAK,CAACoC,IAAN,CAAY,GAAElC,OAAQ,OAAtB,EACE;AACEiB,MAAAA,QADF;AAEEF,MAAAA,QAFF;AAGEO,MAAAA,KAAK,EAAC,CAAC,MAAD,CAHR;AAIEC,MAAAA,MAAM,EAAC;AAJT,KADF,EAOE;AACEC,MAAAA,OAAO,EAAE;AACP,yBAAkB,UAASC,IAAI,CAACC,KAAL,CAAW3B,MAAM,CAAC4B,GAAP,CAAW,UAAX,CAAX,EAAmCC,WAAY;AADnE;AADX,KAPF,EAaCC,IAbD,CAaOC,GAAD,IAAS;AACb,UAAGA,GAAG,CAACV,IAAP,EAAY;AACVV,QAAAA,MAAM,CAACqB,IAAP,CAAY,QAAZ;AACD;AACF,KAjBD,EAkBCC,KAlBD,CAkBQC,GAAD,IAAS;AACdrB,MAAAA,UAAU,CAAC,yBAAD,CAAV;AACAuB,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACD,KArBD;AAuBD,GApDD;;AAsDA,QAAMI,cAAc,GAAIC,SAAD,IAAe;AACpCH,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,SAAvB;AACD,GAFD;;AAGA,QAAM;AAACrB,IAAAA,QAAD;AAAWF,IAAAA;AAAX,MAAuBN,KAAK,CAACW,IAAnC;AACA,SACE,4BACGT,OAAO,GAAG,MAAC,KAAD;AAAO,IAAA,OAAO,EAAEA,OAAhB;AAAyB,IAAA,QAAQ,MAAjC;AAAkC,IAAA,IAAI,EAAC,OAAvC;AAA+C,IAAA,QAAQ,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAgE,IAD1E,EAEE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE4B,MAAAA,SAAS,EAAE;AAAb,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,eACMrC,MADN;AAEE,IAAA,aAAa,EAAE;AAAEe,MAAAA,QAAF;AAAYF,MAAAA,QAAQ,EAACA,QAArB;AAA+BC,MAAAA,eAAe,EAACD;AAA/C,KAFjB;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,QAAQ,EAAEF,QAJZ;AAKE,IAAA,cAAc,EAAEwB,cALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAE,CACL;AACEG,MAAAA,QAAQ,EAAE,IADZ;AAEEC,MAAAA,OAAO,EAAE;AAFX,KADK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CAPF,EAoBE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAE,CACL;AACED,MAAAA,QAAQ,EAAE,IADZ;AAEEC,MAAAA,OAAO,EAAE;AAFX,KADK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CApBF,EAiCE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EAAC,kBADR;AAEE,IAAA,IAAI,EAAC,iBAFP;AAGE,IAAA,KAAK,EAAE,CACL;AACED,MAAAA,QAAQ,EAAE,IADZ;AAEEC,MAAAA,OAAO,EAAE;AAFX,KADK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CAjCF,EA8CE,MAAC,IAAD,CAAM,IAAN,eAAenC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,KAAK,CAACS,IAAN,KAAa,QAAb,GAAsB,QAAtB,GAA+B,QADlC,CADF,CADF,EAME,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAER,MAAAA,MAAM,CAACqB,IAAP,CAAY,QAAZ;AAAuB,KAAhD;AAAkD,IAAA,IAAI,EAAC,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CANF,CADF,CA9CF,CADF,CAFF,CADF;AAoED,CAlID;;AAoIA,eAAevB,GAAf","sourcesContent":["import { useState } from 'react'\nimport Head from 'next/head'\nimport { useRouter } from 'next/router'\nimport { Layout, Card, Row, Col, Form, Input, Button, Alert } from 'antd';\nimport SideBar from '../../components/SideBar'\nimport axios from \"axios\"\nimport Cookie from \"js-cookie\";\nimport { API_URL, login } from '../../api'\n\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nconst App = (props) => {\n  const router = useRouter()\n  const [formErr, setFormErr] = useState('')\n  \n  const onFinish = (values) => {\n    const { password, confirmPassword, username }  = values\n    if( password !== confirmPassword ){\n      return setFormErr(\"Password & Confirm Password is not same\")\n    }\n\n    if(props.mode === 'update'){\n      return axios.put(`${API_URL}users/${props.data._id}`,\n        {\n          username,\n          password,\n          roles:['user'],\n          status:\"1\"\n        },\n        {\n          headers: {\n            'Authorization': `Bearer ${JSON.parse(Cookie.get(\"userInfo\")).accessToken}`\n          }\n        }\n      )\n      .then((res) => {\n        if(res.data){\n          router.push('/users')\n        }\n      })\n      .catch((err) => {\n        setFormErr(\"Username already exists\")\n      })\n    }\n    axios.post(`${API_URL}users`,\n      {\n        username,\n        password,\n        roles:['user'],\n        status:\"1\"\n      },\n      {\n        headers: {\n          'Authorization': `Bearer ${JSON.parse(Cookie.get(\"userInfo\")).accessToken}`\n        }\n      }\n    )\n    .then((res) => {\n      if(res.data){\n        router.push('/users')\n      }\n    })\n    .catch((err) => {\n      setFormErr(\"Username already exists\")\n      console.log(err)\n    })\n\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n  const {username, password} = props.data\n  return (\n    <>\n      {formErr ? <Alert message={formErr} closable type=\"error\" showIcon /> : null}\n      <Card style={{ marginTop: 20 }}>\n        <Form\n          {...layout}\n          initialValues={{ username, password:password, confirmPassword:password}}\n          name=\"basic\"\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n        >\n          <Form.Item\n            label=\"Username\"\n            name=\"username\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your username!',\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Password\"\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your password!',\n              },\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Confirm Password\"\n            name=\"confirmPassword\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input confirm password!',\n              },\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Form.Item {...tailLayout}>\n            <Row>\n              <Col span={6}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  {props.mode==='update'?\"Update\":\"Create\"}\n                </Button>\n              </Col>\n              <Col span={6}>\n                <Button onClick={() => { router.push('/users') }} type=\"warning\">\n                  Cancel\n                </Button>\n              </Col>\n            </Row>\n          </Form.Item>\n        </Form>\n      </Card>\n    </>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}