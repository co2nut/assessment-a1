{"ast":null,"code":"var _jsxFileName = \"/Users/soonsionglim/Development/etern/admin/components/ads/form.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { Radio, Select, Upload, Card, Row, Col, Form, Input, InputNumber, Button, Alert } from 'antd';\nimport axios from \"axios\";\nimport Cookie from \"js-cookie\";\nimport { API_URL } from '../../api';\nimport { mileageRange } from '../../lib/data';\nimport { InboxOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nconst {\n  TextArea\n} = Input;\nconst {\n  Option\n} = Select;\nconst {\n  Dragger\n} = Upload;\n\nvar FormData = require('form-data');\n\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst layoutPrice = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 4\n  }\n};\nconst layoutCondition = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 10\n  }\n};\nconst layout2 = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 20\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 4,\n    span: 16\n  }\n};\nconst SortableItem = SortableElement(({\n  value,\n  onRemove\n}) => {\n  return __jsx(\"div\", {\n    key: value.uid,\n    style: {\n      width: 100,\n      height: 100,\n      margin: 5,\n      textAlign: \"center\",\n      float: 'left',\n      backgroundColor: \"lightgrey\",\n      borderRadius: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 10\n    }\n  }, value.response ? __jsx(\"img\", {\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    src: value.response,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }) : __jsx(\"p\", {\n    style: {\n      marginTop: '35%',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 88\n    }\n  }, \"Uploading...\"), __jsx(\"button\", {\n    style: {\n      cursor: 'pointer',\n      position: 'absolute',\n      borderRadius: 10,\n      marginLeft: -15,\n      marginTop: -5,\n      fontSize: 10\n    },\n    onClick: () => onRemove(value.uid),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, \"X\"));\n});\nconst SortableList = SortableContainer(({\n  items,\n  onRemove\n}) => {\n  return __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      padding: 15,\n      paddingLeft: 20,\n      overflow: \"auto\",\n      backgroundColor: \"lightblue\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, items.map((value, index) => __jsx(\"div\", {\n    id: \"item_\" + value.id,\n    key: `item-${value.uid}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, __jsx(SortableItem, {\n    key: `item-${index}`,\n    index: index,\n    value: value,\n    onRemove: onRemove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }))));\n});\n\nconst App = props => {\n  const {\n    condition,\n    mileage,\n    remark,\n    price,\n    title,\n    description,\n    images,\n    make,\n    model,\n    year,\n    variant,\n    engine,\n    transmission\n  } = props.data;\n  const [form] = Form.useForm();\n  const router = useRouter();\n  const {\n    0: formErr,\n    1: setFormErr\n  } = useState('');\n  const {\n    0: imageList,\n    1: setImageList\n  } = useState([]);\n  const {\n    0: makeList,\n    1: setMakeList\n  } = useState([]);\n  const {\n    0: modelList,\n    1: setModelList\n  } = useState([]);\n  const {\n    0: yearList,\n    1: setYearList\n  } = useState([]);\n  const {\n    0: variantList,\n    1: setVariantList\n  } = useState([]);\n\n  const getParams = async (field, filterObj) => {\n    return axios.get(`${API_URL}spec-params`, {\n      params: {\n        distinct: {\n          field,\n          filterObj\n        }\n      }\n    }).then(res => {\n      if (field === 'make') {\n        return setMakeList(res.data.result);\n      }\n\n      if (field === 'model') {\n        return setModelList(res.data.result);\n      }\n\n      if (field === 'year') {\n        return setYearList(res.data.result);\n      }\n\n      if (field === 'variant') {\n        return setVariantList(res.data.result);\n      }\n    }).catch(err => {\n      console.log(err);\n      return [];\n    });\n  };\n\n  const onNumberChange = e => {\n    const {\n      value\n    } = e.target;\n    const reg = /^-?\\d*(\\.\\d*)?$/;\n\n    if (!isNaN(value) && reg.test(value) || value === '' || value === '-') {\n      props.onChange(value);\n    }\n  };\n\n  useEffect(() => {\n    if (props.mode === 'update') {\n      getParams(\"model\", {\n        make\n      });\n      getParams(\"year\", {\n        make,\n        model\n      });\n      getParams(\"variant\", {\n        make,\n        model,\n        year\n      });\n      let imageList = images.map((i, index) => {\n        console.log({\n          i,\n          index\n        });\n        return {\n          response: i,\n          uid: \"img-\" + index\n        };\n      });\n      setImageList(imageList);\n    }\n\n    getParams(\"make\", {});\n  }, []);\n\n  const onSortEnd = ({\n    oldIndex,\n    newIndex\n  }) => {\n    setImageList(arrayMove(imageList, oldIndex, newIndex));\n  };\n\n  function onRemove(id) {\n    setImageList(imageList.filter(item => item.uid !== id));\n  }\n\n  const uploadImage = async options => {\n    const {\n      onSuccess,\n      onError,\n      file,\n      onProgress\n    } = options;\n    const fmData = new FormData();\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\",\n        'Authorization': `Bearer ${JSON.parse(Cookie.get(\"userInfo\")).access_token}`\n      } // onUploadProgress: event => {\n      //   const percent = Math.floor((event.loaded / event.total) * 100);\n      //   setProgress(percent);\n      //   if (percent === 100) {\n      //     setTimeout(() => setProgress(0), 1000);\n      //   }\n      //   onProgress({ percent: (event.loaded / event.total) * 100 });\n      // }\n\n    };\n    fmData.append(\"documents\", file);\n\n    try {\n      const res = await axios.post(`${API_URL}upload/`, fmData, config);\n      onSuccess(res.data[0]);\n      console.log(\"server res: \", res);\n    } catch (err) {\n      console.log(\"Eroor: \", err);\n      const error = new Error(\"Some error\");\n      onError({\n        err\n      });\n    }\n  };\n\n  const uploadProps = {\n    accept: \"image/*\",\n    showUploadList: false,\n    multiple: true,\n    withCredentials: true,\n    maxCount: 20,\n    fileList: imageList,\n\n    onChange(info) {\n      setImageList(info.fileList);\n    },\n\n    onDrop(e) {\n      console.log('Dropped files', e.dataTransfer.files);\n    }\n\n  };\n\n  const onFinish = values => {\n    const {\n      title,\n      description,\n      condition,\n      make,\n      model,\n      year,\n      variant,\n      mileage,\n      remark,\n      price,\n      engine,\n      transmission\n    } = values; // return  console.log({title, description, condition, make, model, year, variant, mileage, remark, price}, imageList.map(i=>i.response))\n\n    let Images = imageList.map(i => i.response);\n\n    if (props.mode === 'update') {\n      if (Images.length > 0) {\n        return axios.put(`${API_URL}api/ads/${props.data.id}`, {\n          Title: title,\n          Description: description,\n          Condition: condition,\n          Transmission: transmission,\n          Images,\n          Make: make,\n          Model: model,\n          Year: year,\n          Variant: variant,\n          Mileage: mileage,\n          Remark: remark,\n          Price: price,\n          Engine: engine\n        }, {\n          headers: {\n            'Authorization': `Bearer ${JSON.parse(Cookie.get(\"userInfo\")).access_token}`\n          }\n        }).then(res => {\n          if (res.data.success) {\n            router.push('/ads');\n          } else {\n            setFormErr(\"Invalid \" + res.data[0].FailedField.split(\".\")[1] + \" entered\");\n          }\n        }).catch(err => {\n          setFormErr(\"Model already exists\");\n        });\n      } else {\n        setFormErr(\"Please upload image\");\n      }\n    }\n\n    if (Images.length > 0) {\n      axios.post(`${API_URL}api/ads`, {\n        Title: title,\n        Description: description,\n        Condition: condition,\n        Transmission: transmission,\n        Images,\n        Make: make,\n        Model: model,\n        Year: year,\n        Variant: variant,\n        Mileage: mileage,\n        Remark: remark,\n        Price: price,\n        Status: \"1\",\n        Engine: engine\n      }, {\n        headers: {\n          'Authorization': `Bearer ${JSON.parse(Cookie.get(\"userInfo\")).access_token}`\n        }\n      }).then(res => {\n        console.log(res.data);\n\n        if (res.data.success) {\n          router.push('/ads');\n        } else {\n          setFormErr(\"Invalid \" + res.data[0].FailedField.split(\".\")[1] + \" entered\");\n        }\n      }).catch(err => {\n        setFormErr(\"Ads creation error\");\n        console.log(err);\n      });\n    } else {\n      setFormErr(\"Please upload image\");\n    }\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return __jsx(React.Fragment, null, formErr ? __jsx(Alert, {\n    message: formErr,\n    closable: true,\n    type: \"error\",\n    showIcon: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 18\n    }\n  }) : null, __jsx(Card, {\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }\n  }, imageList.length > 0 ? __jsx(SortableList, {\n    axis: \"xy\",\n    items: imageList,\n    onSortEnd: onSortEnd,\n    onRemove: onRemove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 29\n    }\n  }) : null, __jsx(Dragger, _extends({}, uploadProps, {\n    customRequest: uploadImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }\n  }), __jsx(\"p\", {\n    className: \"ant-upload-drag-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 11\n    }\n  }, \" \", __jsx(InboxOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 48\n    }\n  }), \" \"), __jsx(\"p\", {\n    className: \"ant-upload-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 11\n    }\n  }, \" Click or drag file to this area to upload \"), __jsx(\"p\", {\n    className: \"ant-upload-hint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 11\n    }\n  }, \" It is recommended to upload files with size that is not more than 10mb \")), __jsx(Form, _extends({\n    form: form,\n    style: {\n      marginTop: 30\n    }\n  }, layout, {\n    initialValues: {\n      condition,\n      title,\n      mileage,\n      remark,\n      price,\n      make,\n      model,\n      year,\n      variant,\n      description,\n      engine,\n      transmission\n    },\n    name: \"basic\",\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 9\n    }\n  }), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 11\n    }\n  }, __jsx(Form.Item, {\n    name: \"condition\",\n    label: \"Condition\",\n    rules: [{\n      required: true,\n      message: 'Please pick an item!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 11\n    }\n  }, __jsx(Radio.Group, {\n    size: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 13\n    }\n  }, __jsx(Radio.Button, {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 15\n    }\n  }, \"RECON\"), __jsx(Radio.Button, {\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 15\n    }\n  }, \"USED\")))), __jsx(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 11\n    }\n  }, __jsx(Form.Item, {\n    name: \"transmission\",\n    label: \"Transmission\",\n    rules: [{\n      required: true,\n      message: 'Please pick an item!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 11\n    }\n  }, __jsx(Radio.Group, {\n    size: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 13\n    }\n  }, __jsx(Radio.Button, {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 15\n    }\n  }, \"AUTO\"), __jsx(Radio.Button, {\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 15\n    }\n  }, \"MANUAL\"))))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 13\n    }\n  }, __jsx(Form.Item, {\n    label: \"Make\",\n    name: \"make\",\n    rules: [{\n      required: true,\n      message: 'Please input your make!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 15\n    }\n  }, __jsx(Select, {\n    onChange: e => {\n      console.log(\"hello\"), form.setFieldsValue({\n        model: '',\n        year: '',\n        variant: ''\n      }), getParams(\"model\", {\n        make: e\n      });\n    },\n    showSearch: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 17\n    }\n  }, makeList.map(i => __jsx(Option, {\n    key: i,\n    value: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 21\n    }\n  }, i))))), __jsx(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 13\n    }\n  }, __jsx(Form.Item, {\n    label: \"Model\",\n    name: \"model\",\n    rules: [{\n      required: true,\n      message: 'Please input your model!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 15\n    }\n  }, __jsx(Select, {\n    onChange: e => {\n      form.setFieldsValue({\n        year: '',\n        variant: ''\n      }), getParams(\"year\", {\n        make: form.getFieldValue('make'),\n        model: e\n      });\n    },\n    showSearch: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 17\n    }\n  }, modelList.map(i => __jsx(Option, {\n    key: i,\n    value: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 21\n    }\n  }, i)))))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 13\n    }\n  }, __jsx(Form.Item, {\n    label: \"Year\",\n    name: \"year\",\n    rules: [{\n      required: true,\n      message: 'Please input your year!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 15\n    }\n  }, __jsx(Select, {\n    onChange: e => {\n      form.setFieldsValue({\n        variant: ''\n      }), getParams(\"variant\", {\n        make: form.getFieldValue('make'),\n        model: form.getFieldValue('model'),\n        year: e\n      });\n    },\n    showSearch: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 17\n    }\n  }, yearList.map(i => __jsx(Option, {\n    key: i,\n    value: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 21\n    }\n  }, i))))), __jsx(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 13\n    }\n  }, __jsx(Form.Item, {\n    label: \"Variant\",\n    name: \"variant\",\n    rules: [{\n      required: true,\n      message: 'Please input your variant!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 15\n    }\n  }, __jsx(Select, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 17\n    }\n  }, variantList.map(i => __jsx(Option, {\n    key: i,\n    value: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 21\n    }\n  }, i)))))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 13\n    }\n  }, __jsx(Form.Item, {\n    label: \"Mileage\",\n    name: \"mileage\",\n    rules: [{\n      required: true,\n      message: 'Please input your mileage!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 15\n    }\n  }, __jsx(Select, {\n    onChange: e => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 17\n    }\n  }, mileageRange.map(i => __jsx(Option, {\n    key: i,\n    value: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 21\n    }\n  }, i))))), __jsx(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 13\n    }\n  }, __jsx(Form.Item, {\n    label: \"Remark\",\n    name: \"remark\",\n    rules: [{\n      required: true,\n      message: 'Please input your remark!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 15\n    }\n  }, __jsx(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 17\n    }\n  })))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 11\n    }\n  }, __jsx(Form.Item, {\n    label: \"Price\",\n    name: \"price\",\n    rules: [{\n      required: true,\n      message: 'Please input your price!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 11\n    }\n  }, __jsx(InputNumber, {\n    formatter: value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','),\n    parser: value => value.replace(/\\$\\s?|(,*)/g, ''),\n    style: {\n      width: '100%',\n      textAlign: 'right'\n    },\n    min: \"0\",\n    max: \"999999999\",\n    step: \"10000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 13\n    }\n  }))), __jsx(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 11\n    }\n  }, __jsx(Form.Item, {\n    label: \"Engine Capacity\",\n    name: \"engine\",\n    rules: [{\n      required: true,\n      message: 'Please input your engine capacity!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 15\n    }\n  }, __jsx(InputNumber, {\n    style: {\n      width: '100%',\n      textAlign: 'right'\n    },\n    min: \"0\",\n    max: \"999999\",\n    step: \"0.1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 17\n    }\n  })))), __jsx(Form.Item, _extends({}, layout2, {\n    label: \"Title\",\n    name: \"title\",\n    rules: [{\n      required: true,\n      message: 'Please input your title!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 11\n    }\n  }), __jsx(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 13\n    }\n  })), __jsx(Form.Item, _extends({}, layout2, {\n    label: \"Description\",\n    name: \"description\",\n    rules: [{\n      required: true,\n      message: 'Please input your description!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 11\n    }\n  }), __jsx(TextArea, {\n    rows: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 13\n    }\n  })), __jsx(Form.Item, _extends({}, tailLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 11\n    }\n  }), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 17\n    }\n  }, props.mode === 'update' ? \"Edit\" : \"Create\")), __jsx(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    onClick: () => {\n      router.push('/ads');\n    },\n    type: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 17\n    }\n  }, \"Cancel\")))))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/soonsionglim/Development/etern/admin/components/ads/form.js"],"names":["useState","useEffect","useRouter","Radio","Select","Upload","Card","Row","Col","Form","Input","InputNumber","Button","Alert","axios","Cookie","API_URL","mileageRange","InboxOutlined","CloseCircleOutlined","SortableContainer","SortableElement","arrayMove","TextArea","Option","Dragger","FormData","require","layout","labelCol","span","wrapperCol","layoutPrice","layoutCondition","layout2","tailLayout","offset","SortableItem","value","onRemove","uid","width","height","margin","textAlign","float","backgroundColor","borderRadius","response","marginTop","cursor","position","marginLeft","fontSize","SortableList","items","padding","paddingLeft","overflow","map","index","id","App","props","condition","mileage","remark","price","title","description","images","make","model","year","variant","engine","transmission","data","form","useForm","router","formErr","setFormErr","imageList","setImageList","makeList","setMakeList","modelList","setModelList","yearList","setYearList","variantList","setVariantList","getParams","field","filterObj","get","params","distinct","then","res","result","catch","err","console","log","onNumberChange","e","target","reg","isNaN","test","onChange","mode","i","onSortEnd","oldIndex","newIndex","filter","item","uploadImage","options","onSuccess","onError","file","onProgress","fmData","config","headers","JSON","parse","access_token","append","post","error","Error","uploadProps","accept","showUploadList","multiple","withCredentials","maxCount","fileList","info","onDrop","dataTransfer","files","onFinish","values","Images","length","put","Title","Description","Condition","Transmission","Make","Model","Year","Variant","Mileage","Remark","Price","Engine","success","push","FailedField","split","Status","onFinishFailed","errorInfo","required","message","setFieldsValue","getFieldValue","replace"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,MAAxB,EAAgCC,IAAhC,EAAsCC,GAAtC,EAA2CC,GAA3C,EAAgDC,IAAhD,EAAsDC,KAAtD,EAA6DC,WAA7D,EAA0EC,MAA1E,EAAkFC,KAAlF,QAA+F,MAA/F;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,SAASC,aAAT,EAAwBC,mBAAxB,QAAkD,mBAAlD;AACA,SAAQC,iBAAR,EAA2BC,eAA3B,QAAiD,oBAAjD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAeb,KAArB;AACA,MAAM;AAAEc,EAAAA;AAAF,IAAapB,MAAnB;AACA,MAAM;AAAEqB,EAAAA;AAAF,IAAcpB,MAApB;;AACA,IAAIqB,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAE;AADE,GADG;AAIbC,EAAAA,UAAU,EAAE;AACVD,IAAAA,IAAI,EAAE;AADI;AAJC,CAAf;AASA,MAAME,WAAW,GAAG;AAClBH,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAE;AADE,GADQ;AAIlBC,EAAAA,UAAU,EAAE;AACVD,IAAAA,IAAI,EAAE;AADI;AAJM,CAApB;AASA,MAAMG,eAAe,GAAG;AACtBJ,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAE;AADE,GADY;AAItBC,EAAAA,UAAU,EAAE;AACVD,IAAAA,IAAI,EAAE;AADI;AAJU,CAAxB;AASA,MAAMI,OAAO,GAAG;AACdL,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAE;AADE,GADI;AAIdC,EAAAA,UAAU,EAAE;AACVD,IAAAA,IAAI,EAAE;AADI;AAJE,CAAhB;AAQA,MAAMK,UAAU,GAAG;AACjBJ,EAAAA,UAAU,EAAE;AACVK,IAAAA,MAAM,EAAE,CADE;AAEVN,IAAAA,IAAI,EAAE;AAFI;AADK,CAAnB;AAOA,MAAMO,YAAY,GAAGhB,eAAe,CAAC,CAAC;AAACiB,EAAAA,KAAD;AAAOC,EAAAA;AAAP,CAAD,KAAsB;AACzD,SAAO;AAAK,IAAA,GAAG,EAAED,KAAK,CAACE,GAAhB;AAAqB,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAC,GAAP;AAAYC,MAAAA,MAAM,EAAC,GAAnB;AAAwBC,MAAAA,MAAM,EAAC,CAA/B;AAAkCC,MAAAA,SAAS,EAAC,QAA5C;AAAsDC,MAAAA,KAAK,EAAC,MAA5D;AAAoEC,MAAAA,eAAe,EAAC,WAApF;AAAiGC,MAAAA,YAAY,EAAC;AAA9G,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJT,KAAK,CAACU,QAAN,GAAe;AAAK,IAAA,KAAK,EAAE;AAACP,MAAAA,KAAK,EAAC,MAAP;AAAeC,MAAAA,MAAM,EAAC;AAAtB,KAAZ;AAA2C,IAAA,GAAG,EAAEJ,KAAK,CAACU,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAf,GAAkF;AAAG,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAC,KAAX;AAAiBL,MAAAA,SAAS,EAAC;AAA3B,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAD9E,EAEL;AAAS,IAAA,KAAK,EAAE;AAACM,MAAAA,MAAM,EAAC,SAAR;AAAkBC,MAAAA,QAAQ,EAAC,UAA3B;AAAsCJ,MAAAA,YAAY,EAAC,EAAnD;AAAsDK,MAAAA,UAAU,EAAC,CAAC,EAAlE;AAAqEH,MAAAA,SAAS,EAAC,CAAC,CAAhF;AAAkFI,MAAAA,QAAQ,EAAC;AAA3F,KAAhB;AAAgH,IAAA,OAAO,EAAE,MAAMd,QAAQ,CAACD,KAAK,CAACE,GAAP,CAAvI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFK,CAAP;AAMD,CAPmC,CAApC;AASA,MAAMc,YAAY,GAAGlC,iBAAiB,CAAC,CAAC;AAACmC,EAAAA,KAAD;AAAOhB,EAAAA;AAAP,CAAD,KAAsB;AAC3D,SACE;AAAK,IAAA,KAAK,EAAE;AAACE,MAAAA,KAAK,EAAC,MAAP;AAAee,MAAAA,OAAO,EAAC,EAAvB;AAA2BC,MAAAA,WAAW,EAAC,EAAvC;AAA2CC,MAAAA,QAAQ,EAAE,MAArD;AAA4DZ,MAAAA,eAAe,EAAC;AAA5E,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGS,KAAK,CAACI,GAAN,CAAU,CAACrB,KAAD,EAAQsB,KAAR,KACT;AAAK,IAAA,EAAE,EAAE,UAAUtB,KAAK,CAACuB,EAAzB;AAA6B,IAAA,GAAG,EAAG,QAAOvB,KAAK,CAACE,GAAI,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAe,IAAA,GAAG,EAAG,QAAOoB,KAAM,EAAlC;AAAqC,IAAA,KAAK,EAAEA,KAA5C;AAAmD,IAAA,KAAK,EAAEtB,KAA1D;AAAiE,IAAA,QAAQ,EAAEC,QAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CADH,CADF;AASD,CAVqC,CAAtC;;AAYA,MAAMuB,GAAG,GAAIC,KAAD,IAAW;AACrB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA,MAAtB;AAA8BC,IAAAA,KAA9B;AAAqCC,IAAAA,KAArC;AAA4CC,IAAAA,WAA5C;AACLC,IAAAA,MADK;AACGC,IAAAA,IADH;AACSC,IAAAA,KADT;AACgBC,IAAAA,IADhB;AACsBC,IAAAA,OADtB;AAC8BC,IAAAA,MAD9B;AACqCC,IAAAA;AADrC,MAEFb,KAAK,CAACc,IAFV;AAGA,QAAM,CAACC,IAAD,IAASrE,IAAI,CAACsE,OAAL,EAAf;AAEA,QAAMC,MAAM,GAAG9E,SAAS,EAAxB;AACA,QAAM;AAAA,OAAC+E,OAAD;AAAA,OAAUC;AAAV,MAAwBlF,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAACmF,SAAD;AAAA,OAAYC;AAAZ,MAA4BpF,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAA,OAACqF,QAAD;AAAA,OAAWC;AAAX,MAA0BtF,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACuF,SAAD;AAAA,OAAYC;AAAZ,MAA4BxF,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAA,OAACyF,QAAD;AAAA,OAAWC;AAAX,MAA0B1F,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAAC2F,WAAD;AAAA,OAAcC;AAAd,MAAgC5F,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAM6F,SAAS,GAAE,OAAMC,KAAN,EAAaC,SAAb,KAAyB;AACxC,WAAOjF,KAAK,CAACkF,GAAN,CAAW,GAAEhF,OAAQ,aAArB,EACL;AACEiF,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE;AAACJ,UAAAA,KAAD;AAAQC,UAAAA;AAAR;AADJ;AADV,KADK,EAONI,IAPM,CAOAC,GAAD,IAAS;AACb,UAAGN,KAAK,KAAK,MAAb,EAAoB;AAClB,eAAOR,WAAW,CAACc,GAAG,CAACvB,IAAJ,CAASwB,MAAV,CAAlB;AACD;;AACD,UAAGP,KAAK,KAAK,OAAb,EAAqB;AACnB,eAAON,YAAY,CAACY,GAAG,CAACvB,IAAJ,CAASwB,MAAV,CAAnB;AACD;;AACD,UAAGP,KAAK,KAAK,MAAb,EAAoB;AAClB,eAAOJ,WAAW,CAACU,GAAG,CAACvB,IAAJ,CAASwB,MAAV,CAAlB;AACD;;AACD,UAAGP,KAAK,KAAK,SAAb,EAAuB;AACrB,eAAOF,cAAc,CAACQ,GAAG,CAACvB,IAAJ,CAASwB,MAAV,CAArB;AACD;AACF,KApBM,EAqBNC,KArBM,CAqBCC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,aAAO,EAAP;AACD,KAxBM,CAAP;AA0BD,GA3BD;;AA6BA,QAAMG,cAAc,GAAIC,CAAD,IAAO;AAC5B,UAAM;AAAErE,MAAAA;AAAF,QAAYqE,CAAC,CAACC,MAApB;AACA,UAAMC,GAAG,GAAG,iBAAZ;;AACA,QAAK,CAACC,KAAK,CAACxE,KAAD,CAAN,IAAiBuE,GAAG,CAACE,IAAJ,CAASzE,KAAT,CAAlB,IAAsCA,KAAK,KAAK,EAAhD,IAAsDA,KAAK,KAAK,GAApE,EAAyE;AACvEyB,MAAAA,KAAK,CAACiD,QAAN,CAAe1E,KAAf;AACD;AACF,GAND;;AAQArC,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAG8D,KAAK,CAACkD,IAAN,KAAe,QAAlB,EAA2B;AACzBpB,MAAAA,SAAS,CAAC,OAAD,EAAS;AAACtB,QAAAA;AAAD,OAAT,CAAT;AACAsB,MAAAA,SAAS,CAAC,MAAD,EAAQ;AAACtB,QAAAA,IAAD;AAAMC,QAAAA;AAAN,OAAR,CAAT;AACAqB,MAAAA,SAAS,CAAC,SAAD,EAAW;AAACtB,QAAAA,IAAD;AAAMC,QAAAA,KAAN;AAAYC,QAAAA;AAAZ,OAAX,CAAT;AACA,UAAIU,SAAS,GAAGb,MAAM,CAACX,GAAP,CAAW,CAACuD,CAAD,EAAGtD,KAAH,KAAW;AACpC4C,QAAAA,OAAO,CAACC,GAAR,CAAY;AAACS,UAAAA,CAAD;AAAGtD,UAAAA;AAAH,SAAZ;AACA,eAAO;AAACZ,UAAAA,QAAQ,EAACkE,CAAV;AAAa1E,UAAAA,GAAG,EAAC,SAAOoB;AAAxB,SAAP;AACD,OAHe,CAAhB;AAIAwB,MAAAA,YAAY,CAACD,SAAD,CAAZ;AAED;;AACDU,IAAAA,SAAS,CAAC,MAAD,EAAQ,EAAR,CAAT;AACD,GAbQ,EAaP,EAbO,CAAT;;AAgBA,QAAMsB,SAAS,GAAG,CAAC;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAD,KAA0B;AAC1CjC,IAAAA,YAAY,CAAC9D,SAAS,CAAC6D,SAAD,EAAYiC,QAAZ,EAAsBC,QAAtB,CAAV,CAAZ;AACD,GAFD;;AAIA,WAAS9E,QAAT,CAAkBsB,EAAlB,EAAqB;AACnBuB,IAAAA,YAAY,CAACD,SAAS,CAACmC,MAAV,CAAiBC,IAAI,IAAIA,IAAI,CAAC/E,GAAL,KAAaqB,EAAtC,CAAD,CAAZ;AAED;;AAGD,QAAM2D,WAAW,GAAG,MAAMC,OAAN,IAAiB;AACnC,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,OAAb;AAAsBC,MAAAA,IAAtB;AAA4BC,MAAAA;AAA5B,QAA2CJ,OAAjD;AACA,UAAMK,MAAM,GAAG,IAAIpG,QAAJ,EAAf;AACA,UAAMqG,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AAAE,wBAAgB,qBAAlB;AAAyC,yBAAkB,UAASC,IAAI,CAACC,KAAL,CAAWnH,MAAM,CAACiF,GAAP,CAAW,UAAX,CAAX,EAAmCmC,YAAa;AAApH,OADI,CAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AATa,KAAf;AAWAL,IAAAA,MAAM,CAACM,MAAP,CAAc,WAAd,EAA2BR,IAA3B;;AACA,QAAI;AACF,YAAMxB,GAAG,GAAG,MAAMtF,KAAK,CAACuH,IAAN,CAAY,GAAErH,OAAQ,SAAtB,EAChB8G,MADgB,EAEhBC,MAFgB,CAAlB;AAKAL,MAAAA,SAAS,CAACtB,GAAG,CAACvB,IAAJ,CAAS,CAAT,CAAD,CAAT;AACA2B,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BL,GAA5B;AACD,KARD,CAQE,OAAOG,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,GAAvB;AACA,YAAM+B,KAAK,GAAG,IAAIC,KAAJ,CAAU,YAAV,CAAd;AACAZ,MAAAA,OAAO,CAAC;AAAEpB,QAAAA;AAAF,OAAD,CAAP;AACD;AACF,GA5BD;;AA8BA,QAAMiC,WAAW,GAAG;AAClBC,IAAAA,MAAM,EAAC,SADW;AAElBC,IAAAA,cAAc,EAAC,KAFG;AAGlBC,IAAAA,QAAQ,EAAE,IAHQ;AAIlBC,IAAAA,eAAe,EAAC,IAJE;AAKlBC,IAAAA,QAAQ,EAAC,EALS;AAMlBC,IAAAA,QAAQ,EAAC3D,SANS;;AAOlB6B,IAAAA,QAAQ,CAAC+B,IAAD,EAAO;AACb3D,MAAAA,YAAY,CAAC2D,IAAI,CAACD,QAAN,CAAZ;AACD,KATiB;;AAUlBE,IAAAA,MAAM,CAACrC,CAAD,EAAI;AACRH,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BE,CAAC,CAACsC,YAAF,CAAeC,KAA5C;AACD;;AAZiB,GAApB;;AAeA,QAAMC,QAAQ,GAAIC,MAAD,IAAY;AAC3B,UAAM;AAAEhF,MAAAA,KAAF;AAASC,MAAAA,WAAT;AAAsBL,MAAAA,SAAtB;AAAiCO,MAAAA,IAAjC;AAAuCC,MAAAA,KAAvC;AAA8CC,MAAAA,IAA9C;AAAoDC,MAAAA,OAApD;AAA6DT,MAAAA,OAA7D;AAAsEC,MAAAA,MAAtE;AAA8EC,MAAAA,KAA9E;AAAoFQ,MAAAA,MAApF;AAA2FC,MAAAA;AAA3F,QAA4GwE,MAAlH,CAD2B,CAE3B;;AACA,QAAIC,MAAM,GAAGlE,SAAS,CAACxB,GAAV,CAAcuD,CAAC,IAAEA,CAAC,CAAClE,QAAnB,CAAb;;AAGA,QAAGe,KAAK,CAACkD,IAAN,KAAe,QAAlB,EAA2B;AACzB,UAAGoC,MAAM,CAACC,MAAP,GAAc,CAAjB,EAAmB;AACnB,eAAOxI,KAAK,CAACyI,GAAN,CAAW,GAAEvI,OAAQ,WAAU+C,KAAK,CAACc,IAAN,CAAWhB,EAAG,EAA7C,EACL;AACE2F,UAAAA,KAAK,EAACpF,KADR;AAEEqF,UAAAA,WAAW,EAACpF,WAFd;AAGEqF,UAAAA,SAAS,EAAC1F,SAHZ;AAIE2F,UAAAA,YAAY,EAAC/E,YAJf;AAKEyE,UAAAA,MALF;AAMEO,UAAAA,IAAI,EAACrF,IANP;AAOEsF,UAAAA,KAAK,EAACrF,KAPR;AAQEsF,UAAAA,IAAI,EAACrF,IARP;AASEsF,UAAAA,OAAO,EAACrF,OATV;AAUEsF,UAAAA,OAAO,EAAC/F,OAVV;AAWEgG,UAAAA,MAAM,EAAC/F,MAXT;AAYEgG,UAAAA,KAAK,EAAC/F,KAZR;AAaEgG,UAAAA,MAAM,EAACxF;AAbT,SADK,EAgBL;AACEqD,UAAAA,OAAO,EAAE;AACP,6BAAkB,UAASC,IAAI,CAACC,KAAL,CAAWnH,MAAM,CAACiF,GAAP,CAAW,UAAX,CAAX,EAAmCmC,YAAa;AADpE;AADX,SAhBK,EAsBNhC,IAtBM,CAsBAC,GAAD,IAAS;AACb,cAAGA,GAAG,CAACvB,IAAJ,CAASuF,OAAZ,EAAoB;AAClBpF,YAAAA,MAAM,CAACqF,IAAP,CAAY,MAAZ;AACD,WAFD,MAEK;AACHnF,YAAAA,UAAU,CAAC,aAAckB,GAAG,CAACvB,IAAJ,CAAS,CAAT,EAAYyF,WAAZ,CAAwBC,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC,CAAd,GAAsD,UAAvD,CAAV;AACD;AACF,SA5BM,EA6BNjE,KA7BM,CA6BCC,GAAD,IAAS;AACdrB,UAAAA,UAAU,CAAC,sBAAD,CAAV;AACD,SA/BM,CAAP;AA+BG,OAhCH,MAgCO;AACLA,QAAAA,UAAU,CAAC,qBAAD,CAAV;AAED;AACF;;AAED,QAAGmE,MAAM,CAACC,MAAP,GAAc,CAAjB,EAAmB;AACnBxI,MAAAA,KAAK,CAACuH,IAAN,CAAY,GAAErH,OAAQ,SAAtB,EACE;AACEwI,QAAAA,KAAK,EAACpF,KADR;AAEEqF,QAAAA,WAAW,EAACpF,WAFd;AAGEqF,QAAAA,SAAS,EAAC1F,SAHZ;AAIE2F,QAAAA,YAAY,EAAC/E,YAJf;AAKEyE,QAAAA,MALF;AAMEO,QAAAA,IAAI,EAACrF,IANP;AAOEsF,QAAAA,KAAK,EAACrF,KAPR;AAQEsF,QAAAA,IAAI,EAACrF,IARP;AASEsF,QAAAA,OAAO,EAACrF,OATV;AAUEsF,QAAAA,OAAO,EAAC/F,OAVV;AAWEgG,QAAAA,MAAM,EAAC/F,MAXT;AAYEgG,QAAAA,KAAK,EAAC/F,KAZR;AAaEqG,QAAAA,MAAM,EAAC,GAbT;AAcEL,QAAAA,MAAM,EAACxF;AAdT,OADF,EAkBE;AACEqD,QAAAA,OAAO,EAAE;AACP,2BAAkB,UAASC,IAAI,CAACC,KAAL,CAAWnH,MAAM,CAACiF,GAAP,CAAW,UAAX,CAAX,EAAmCmC,YAAa;AADpE;AADX,OAlBF,EAwBChC,IAxBD,CAwBOC,GAAD,IAAS;AACbI,QAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACvB,IAAhB;;AACA,YAAGuB,GAAG,CAACvB,IAAJ,CAASuF,OAAZ,EAAoB;AAClBpF,UAAAA,MAAM,CAACqF,IAAP,CAAY,MAAZ;AACD,SAFD,MAEK;AACHnF,UAAAA,UAAU,CAAC,aAAckB,GAAG,CAACvB,IAAJ,CAAS,CAAT,EAAYyF,WAAZ,CAAwBC,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC,CAAd,GAAsD,UAAvD,CAAV;AACD;AACF,OA/BD,EAgCCjE,KAhCD,CAgCQC,GAAD,IAAS;AACdrB,QAAAA,UAAU,CAAC,oBAAD,CAAV;AACAsB,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OAnCD;AAmCG,KApCH,MAoCO;AACLrB,MAAAA,UAAU,CAAC,qBAAD,CAAV;AAED;AAEF,GAtFD;;AAwFA,QAAMuF,cAAc,GAAIC,SAAD,IAAe;AACpClE,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBiE,SAAvB;AACD,GAFD;;AAIA,SACE,4BACGzF,OAAO,GAAG,MAAC,KAAD;AAAO,IAAA,OAAO,EAAEA,OAAhB;AAAyB,IAAA,QAAQ,MAAjC;AAAkC,IAAA,IAAI,EAAC,OAAvC;AAA+C,IAAA,QAAQ,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAgE,IAD1E,EAEE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEhC,MAAAA,SAAS,EAAE;AAAb,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGkC,SAAS,CAACmE,MAAV,GAAiB,CAAjB,GAAmB,MAAC,YAAD;AAAc,IAAA,IAAI,EAAC,IAAnB;AAAwB,IAAA,KAAK,EAAEnE,SAA/B;AAA0C,IAAA,SAAS,EAAEgC,SAArD;AAAgE,IAAA,QAAQ,EAAE5E,QAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnB,GAA0G,IAD7G,EAEE,MAAC,OAAD,eAAaiG,WAAb;AACE,IAAA,aAAa,EAAEhB,WADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAGE;AAAG,IAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAqC,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArC,MAHF,EAIE;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAJF,EAKE;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gFALF,CAFF,EAUE,MAAC,IAAD;AACE,IAAA,IAAI,EAAE1C,IADR;AAEE,IAAA,KAAK,EAAE;AAAC7B,MAAAA,SAAS,EAAC;AAAX;AAFT,KAGMrB,MAHN;AAIE,IAAA,aAAa,EAAE;AAAEoC,MAAAA,SAAF;AAAaI,MAAAA,KAAb;AAAoBH,MAAAA,OAApB;AAA6BC,MAAAA,MAA7B;AAAqCC,MAAAA,KAArC;AAA4CI,MAAAA,IAA5C;AAAkDC,MAAAA,KAAlD;AAAyDC,MAAAA,IAAzD;AAA+DC,MAAAA,OAA/D;AAAwEL,MAAAA,WAAxE;AAAoFM,MAAAA,MAApF;AAA2FC,MAAAA;AAA3F,KAJjB;AAKE,IAAA,IAAI,EAAC,OALP;AAME,IAAA,QAAQ,EAAEuE,QANZ;AAOE,IAAA,cAAc,EAAEsB,cAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAUE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,KAAK,EAAC,WAFR;AAGE,IAAA,KAAK,EAAE,CAAC;AAAEE,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,KAAD,CAAO,KAAP;AAAa,IAAA,IAAI,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,KAAK,EAAC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,KAAK,EAAC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CALF,CADA,CADA,EAaA,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,IAAI,EAAC,cADP;AAEE,IAAA,KAAK,EAAC,cAFR;AAGE,IAAA,KAAK,EAAE,CAAC;AAAED,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,KAAD,CAAO,KAAP;AAAa,IAAA,IAAI,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,KAAK,EAAC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,KAAK,EAAC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CALF,CADA,CAbA,CAVF,EAqCE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAwB,IAAA,IAAI,EAAC,MAA7B;AACE,IAAA,KAAK,EAAE,CACL;AACED,MAAAA,QAAQ,EAAE,IADZ;AAEEC,MAAAA,OAAO,EAAE;AAFX,KADK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,MAAC,MAAD;AAAQ,IAAA,QAAQ,EAAGjE,CAAD,IAAK;AAAGH,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,GAAsB3B,IAAI,CAAC+F,cAAL,CAAoB;AAACrG,QAAAA,KAAK,EAAC,EAAP;AAAWC,QAAAA,IAAI,EAAC,EAAhB;AAAoBC,QAAAA,OAAO,EAAC;AAA5B,OAApB,CAAtB,EAA4EmB,SAAS,CAAC,OAAD,EAAS;AAACtB,QAAAA,IAAI,EAACoC;AAAN,OAAT,CAArF;AAAyG,KAAnI;AAAqI,IAAA,UAAU,MAA/I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtB,QAAQ,CAAC1B,GAAT,CAAauD,CAAC,IACb,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,CAAb;AAAgB,IAAA,KAAK,EAAEA,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BA,CAA3B,CADD,CADH,CARF,CADF,CADF,EAkBE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAC,OAAjB;AAAyB,IAAA,IAAI,EAAC,OAA9B;AACE,IAAA,KAAK,EAAE,CACL;AACEyD,MAAAA,QAAQ,EAAE,IADZ;AAEEC,MAAAA,OAAO,EAAE;AAFX,KADK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,MAAC,MAAD;AAAQ,IAAA,QAAQ,EAAGjE,CAAD,IAAK;AAAG7B,MAAAA,IAAI,CAAC+F,cAAL,CAAoB;AAACpG,QAAAA,IAAI,EAAC,EAAN;AAAUC,QAAAA,OAAO,EAAC;AAAlB,OAApB,GAA6CmB,SAAS,CAAC,MAAD,EAAQ;AAACtB,QAAAA,IAAI,EAACO,IAAI,CAACgG,aAAL,CAAmB,MAAnB,CAAN;AAAiCtG,QAAAA,KAAK,EAACmC;AAAvC,OAAR,CAAtD;AAA0G,KAApI;AAAsI,IAAA,UAAU,MAAhJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpB,SAAS,CAAC5B,GAAV,CAAcuD,CAAC,IACd,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,CAAb;AAAgB,IAAA,KAAK,EAAEA,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BA,CAA3B,CADD,CADH,CARF,CADF,CAlBF,CArCF,EAyEE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAwB,IAAA,IAAI,EAAC,MAA7B;AACE,IAAA,KAAK,EAAE,CACL;AACEyD,MAAAA,QAAQ,EAAE,IADZ;AAEEC,MAAAA,OAAO,EAAE;AAFX,KADK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,MAAC,MAAD;AAAQ,IAAA,QAAQ,EAAGjE,CAAD,IAAK;AAAE7B,MAAAA,IAAI,CAAC+F,cAAL,CAAoB;AAACnG,QAAAA,OAAO,EAAC;AAAT,OAApB,GAAmCmB,SAAS,CAAC,SAAD,EAAW;AAACtB,QAAAA,IAAI,EAACO,IAAI,CAACgG,aAAL,CAAmB,MAAnB,CAAN;AAAiCtG,QAAAA,KAAK,EAACM,IAAI,CAACgG,aAAL,CAAmB,OAAnB,CAAvC;AAAmErG,QAAAA,IAAI,EAACkC;AAAxE,OAAX,CAA5C;AAAoI,KAA7J;AAA+J,IAAA,UAAU,MAAzK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlB,QAAQ,CAAC9B,GAAT,CAAauD,CAAC,IACb,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,CAAb;AAAgB,IAAA,KAAK,EAAEA,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BA,CAA3B,CADD,CADH,CARF,CADF,CADF,EAkBE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,KAAK,EAAE,CACL;AACEyD,MAAAA,QAAQ,EAAE,IADZ;AAEEC,MAAAA,OAAO,EAAE;AAFX,KADK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjF,WAAW,CAAChC,GAAZ,CAAgBuD,CAAC,IAChB,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,CAAb;AAAgB,IAAA,KAAK,EAAEA,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BA,CAA3B,CADD,CADH,CAVF,CADF,CAlBF,CAzEF,EA+GE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAC,SAAjB;AAA2B,IAAA,IAAI,EAAC,SAAhC;AACE,IAAA,KAAK,EAAE,CACL;AACEyD,MAAAA,QAAQ,EAAE,IADZ;AAEEC,MAAAA,OAAO,EAAE;AAFX,KADK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,MAAC,MAAD;AAAQ,IAAA,QAAQ,EAAGjE,CAAD,IAAK,CAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG1F,YAAY,CAAC0C,GAAb,CAAiBuD,CAAC,IACjB,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,CAAb;AAAgB,IAAA,KAAK,EAAEA,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BA,CAA3B,CADD,CADH,CARF,CADF,CADF,EAyBE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EAAC,QADR;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,KAAK,EAAE,CACL;AACEyD,MAAAA,QAAQ,EAAE,IADZ;AAEEC,MAAAA,OAAO,EAAE;AAFX,KADK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF,CAzBF,CA/GF,EAwJE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAC,OAAjB;AAAyB,IAAA,IAAI,EAAC,OAA9B;AACE,IAAA,KAAK,EAAE,CACL;AACED,MAAAA,QAAQ,EAAE,IADZ;AAEEC,MAAAA,OAAO,EAAE;AAFX,KADK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,MAAC,WAAD;AACE,IAAA,SAAS,EAAEtI,KAAK,IAAK,GAAEA,KAAM,EAAT,CAAWyI,OAAX,CAAmB,uBAAnB,EAA4C,GAA5C,CADtB;AAEE,IAAA,MAAM,EAAEzI,KAAK,IAAIA,KAAK,CAACyI,OAAN,CAAc,aAAd,EAA6B,EAA7B,CAFnB;AAGE,IAAA,KAAK,EAAE;AAACtI,MAAAA,KAAK,EAAC,MAAP;AAAeG,MAAAA,SAAS,EAAC;AAAzB,KAHT;AAIE,IAAA,GAAG,EAAC,GAJN;AAKE,IAAA,GAAG,EAAC,WALN;AAME,IAAA,IAAI,EAAC,OANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADA,CADA,EAoBA,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAC,iBAAjB;AAAmC,IAAA,IAAI,EAAC,QAAxC;AACE,IAAA,KAAK,EAAE,CACL;AACE+H,MAAAA,QAAQ,EAAE,IADZ;AAEEC,MAAAA,OAAO,EAAE;AAFX,KADK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,MAAC,WAAD;AACE,IAAA,KAAK,EAAE;AAACnI,MAAAA,KAAK,EAAC,MAAP;AAAeG,MAAAA,SAAS,EAAC;AAAzB,KADT;AAEE,IAAA,GAAG,EAAC,GAFN;AAGE,IAAA,GAAG,EAAC,QAHN;AAIE,IAAA,IAAI,EAAC,KAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADJ,CApBA,CAxJF,EAgME,MAAC,IAAD,CAAM,IAAN,eAAeV,OAAf;AACE,IAAA,KAAK,EAAC,OADR;AACgB,IAAA,IAAI,EAAC,OADrB;AAEI,IAAA,KAAK,EAAE,CACL;AACEyI,MAAAA,QAAQ,EAAE,IADZ;AAEEC,MAAAA,OAAO,EAAE;AAFX,KADK,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CAhMF,EA4ME,MAAC,IAAD,CAAM,IAAN,eAAe1I,OAAf;AAAwB,IAAA,KAAK,EAAC,aAA9B;AAA4C,IAAA,IAAI,EAAC,aAAjD;AACE,IAAA,KAAK,EAAE,CACL;AACEyI,MAAAA,QAAQ,EAAE,IADZ;AAEEC,MAAAA,OAAO,EAAE;AAFX,KADK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQE,MAAC,QAAD;AAAU,IAAA,IAAI,EAAE,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CA5MF,EAuNE,MAAC,IAAD,CAAM,IAAN,eAAezI,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG4B,KAAK,CAACkD,IAAN,KAAa,QAAb,GAAsB,MAAtB,GAA6B,QADhC,CADF,CADF,EAME,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAEjC,MAAAA,MAAM,CAACqF,IAAP,CAAY,MAAZ;AAAqB,KAA9C;AAAgD,IAAA,IAAI,EAAC,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CANF,CADF,CAvNF,CAVF,CAFF,CADF;AAsPD,CA5cD;;AA8cA,eAAevG,GAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useRouter } from 'next/router'\nimport { Radio, Select, Upload, Card, Row, Col, Form, Input, InputNumber, Button, Alert } from 'antd';\nimport axios from \"axios\"\nimport Cookie from \"js-cookie\";\nimport { API_URL } from '../../api'\nimport { mileageRange } from '../../lib/data'\n\nimport { InboxOutlined ,CloseCircleOutlined} from '@ant-design/icons';\nimport {SortableContainer, SortableElement} from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nconst { TextArea } = Input;\nconst { Option } = Select;\nconst { Dragger } = Upload;\nvar FormData = require('form-data');\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\n\nconst layoutPrice = {\n  labelCol: {\n    span: 4,\n  },\n  wrapperCol: {\n    span: 4,\n  },\n};\n\nconst layoutCondition = {\n  labelCol: {\n    span: 4,\n  },\n  wrapperCol: {\n    span: 10,\n  },\n};\n\nconst layout2 = {\n  labelCol: {\n    span: 4,\n  },\n  wrapperCol: {\n    span: 20,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 4,\n    span: 16,\n  },\n};\n\nconst SortableItem = SortableElement(({value,onRemove}) => {\n  return <div key={value.uid} style={{width:100, height:100, margin:5, textAlign:\"center\", float:'left', backgroundColor:\"lightgrey\", borderRadius:15}}>\n    {value.response?<img style={{width:'100%', height:'100%'}} src={value.response} />:<p style={{marginTop:'35%',textAlign:'center'}}>Uploading...</p>}\n    <button  style={{cursor:'pointer',position:'absolute',borderRadius:10,marginLeft:-15,marginTop:-5,fontSize:10}} onClick={() => onRemove(value.uid)}>\n        X\n      </button>\n    </div>\n});\n\nconst SortableList = SortableContainer(({items,onRemove}) => {\n  return (\n    <div style={{width:\"100%\", padding:15, paddingLeft:20, overflow: \"auto\",backgroundColor:\"lightblue\"}} >\n      {items.map((value, index) => (\n        <div id={\"item_\" + value.id} key={`item-${value.uid}`}>\n          <SortableItem  key={`item-${index}`} index={index} value={value} onRemove={onRemove} />\n        </div>\n      ))}\n    </div>\n  );\n});\n\nconst App = (props) => {\n  const { condition, mileage, remark, price, title, description,\n   images, make, model, year, variant,engine,transmission\n  } = props.data\n  const [form] = Form.useForm();\n\n  const router = useRouter()  \n  const [formErr, setFormErr] = useState('')\n  const [imageList, setImageList] = useState([])\n  const [makeList, setMakeList] = useState([])\n  const [modelList, setModelList] = useState([])\n  const [yearList, setYearList] = useState([])\n  const [variantList, setVariantList] = useState([])\n\n  const getParams =async(field, filterObj)=>{\n    return axios.get(`${API_URL}spec-params`,\n      {\n        params: {\n          distinct: {field, filterObj},\n        },\n      },\n    )\n    .then((res) => {\n      if(field === 'make'){\n        return setMakeList(res.data.result)\n      }\n      if(field === 'model'){\n        return setModelList(res.data.result)\n      }\n      if(field === 'year'){\n        return setYearList(res.data.result)\n      }\n      if(field === 'variant'){\n        return setVariantList(res.data.result)\n      }\n    })\n    .catch((err) => {\n      console.log(err)\n      return []\n    })\n\n  }\n\n  const onNumberChange = (e) => {\n    const { value } = e.target;\n    const reg = /^-?\\d*(\\.\\d*)?$/;\n    if ((!isNaN(value) && reg.test(value)) || value === '' || value === '-') {\n      props.onChange(value);\n    }\n  };\n\n  useEffect(()=>{\n    if(props.mode === 'update'){\n      getParams(\"model\",{make})\n      getParams(\"year\",{make,model})\n      getParams(\"variant\",{make,model,year})\n      let imageList = images.map((i,index)=>{\n        console.log({i,index})\n        return {response:i, uid:\"img-\"+index}\n      })\n      setImageList(imageList)\n\n    }\n    getParams(\"make\",{})\n  },[])\n  \n\n  const onSortEnd = ({oldIndex, newIndex}) => {\n    setImageList(arrayMove(imageList, oldIndex, newIndex))\n  };\n\n  function onRemove(id){\n    setImageList(imageList.filter(item => item.uid !== id))\n    \n  }\n\n\n  const uploadImage = async options => {\n    const { onSuccess, onError, file, onProgress } = options;\n    const fmData = new FormData();\n    const config = {\n      headers: { \"content-type\": \"multipart/form-data\", 'Authorization': `Bearer ${JSON.parse(Cookie.get(\"userInfo\")).access_token}` },\n      // onUploadProgress: event => {\n      //   const percent = Math.floor((event.loaded / event.total) * 100);\n      //   setProgress(percent);\n      //   if (percent === 100) {\n      //     setTimeout(() => setProgress(0), 1000);\n      //   }\n      //   onProgress({ percent: (event.loaded / event.total) * 100 });\n      // }\n    };\n    fmData.append(\"documents\", file);\n    try {\n      const res = await axios.post(`${API_URL}upload/`,\n        fmData,\n        config\n      );\n\n      onSuccess(res.data[0]);\n      console.log(\"server res: \", res);\n    } catch (err) {\n      console.log(\"Eroor: \", err);\n      const error = new Error(\"Some error\");\n      onError({ err });\n    }\n  };\n\n  const uploadProps = {\n    accept:\"image/*\",\n    showUploadList:false,\n    multiple: true,\n    withCredentials:true,\n    maxCount:20,\n    fileList:imageList,\n    onChange(info) {\n      setImageList(info.fileList)\n    },\n    onDrop(e) {\n      console.log('Dropped files', e.dataTransfer.files);\n    },\n  };\n  \n  const onFinish = (values) => {\n    const { title, description, condition, make, model, year, variant, mileage, remark, price,engine,transmission } = values\n    // return  console.log({title, description, condition, make, model, year, variant, mileage, remark, price}, imageList.map(i=>i.response))\n    let Images = imageList.map(i=>i.response)\n    \n\n    if(props.mode === 'update'){\n      if(Images.length>0){\n      return axios.put(`${API_URL}api/ads/${props.data.id}`,\n        {\n          Title:title,\n          Description:description,\n          Condition:condition,\n          Transmission:transmission,\n          Images,\n          Make:make,\n          Model:model,\n          Year:year,\n          Variant:variant,\n          Mileage:mileage,\n          Remark:remark,\n          Price:price,\n          Engine:engine\n        },\n        {\n          headers: {\n            'Authorization': `Bearer ${JSON.parse(Cookie.get(\"userInfo\")).access_token}`\n          }\n        }\n      )\n      .then((res) => {\n        if(res.data.success){\n          router.push('/ads')\n        }else{\n          setFormErr(\"Invalid \" +  res.data[0].FailedField.split(\".\")[1] + \" entered\")  \n        }\n      })\n      .catch((err) => {\n        setFormErr(\"Model already exists\")\n      })}else{\n        setFormErr(\"Please upload image\")\n  \n      }\n    }\n    \n    if(Images.length>0){\n    axios.post(`${API_URL}api/ads`,\n      {\n        Title:title,\n        Description:description,\n        Condition:condition,\n        Transmission:transmission,\n        Images,\n        Make:make,\n        Model:model,\n        Year:year,\n        Variant:variant,\n        Mileage:mileage,\n        Remark:remark,\n        Price:price,\n        Status:\"1\",\n        Engine:engine\n\n      },\n      {\n        headers: {\n          'Authorization': `Bearer ${JSON.parse(Cookie.get(\"userInfo\")).access_token}`\n        }\n      }\n    )\n    .then((res) => {\n      console.log(res.data)\n      if(res.data.success){\n        router.push('/ads')\n      }else{\n        setFormErr(\"Invalid \" +  res.data[0].FailedField.split(\".\")[1] + \" entered\")  \n      }\n    })\n    .catch((err) => {\n      setFormErr(\"Ads creation error\")\n      console.log(err)\n    })}else{\n      setFormErr(\"Please upload image\")\n\n    }\n\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return (\n    <>\n      {formErr ? <Alert message={formErr} closable type=\"error\" showIcon /> : null}\n      <Card style={{ marginTop: 20 }}>\n        {imageList.length>0?<SortableList axis=\"xy\" items={imageList} onSortEnd={onSortEnd} onRemove={onRemove} />:null}\n        <Dragger {...uploadProps} \n          customRequest={uploadImage}\n          >\n          <p className=\"ant-upload-drag-icon\"> <InboxOutlined /> </p>\n          <p className=\"ant-upload-text\"> Click or drag file to this area to upload </p>\n          <p className=\"ant-upload-hint\"> It is recommended to upload files with size that is not more than 10mb </p>\n        </Dragger>\n\n        <Form\n          form={form}\n          style={{marginTop:30}}\n          {...layout}\n          initialValues={{ condition, title, mileage, remark, price, make, model, year, variant, description,engine,transmission }}\n          name=\"basic\"\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n        >\n\n          <Row>\n          <Col span={12}>\n          <Form.Item\n            name=\"condition\"\n            label=\"Condition\"\n            rules={[{ required: true, message: 'Please pick an item!' }]}\n          >\n            <Radio.Group size=\"middle\">\n              <Radio.Button value=\"0\">RECON</Radio.Button>\n              <Radio.Button value=\"1\">USED</Radio.Button>\n            </Radio.Group>\n          </Form.Item>\n          </Col>\n          <Col span={12}>\n          <Form.Item\n            name=\"transmission\"\n            label=\"Transmission\"\n            rules={[{ required: true, message: 'Please pick an item!' }]}\n          >\n            <Radio.Group size=\"middle\">\n              <Radio.Button value=\"0\">AUTO</Radio.Button>\n              <Radio.Button value=\"1\">MANUAL</Radio.Button>\n            </Radio.Group>\n          </Form.Item>\n          </Col>\n          </Row>\n\n          <Row>\n            <Col span={12}>\n              <Form.Item label=\"Make\" name=\"make\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input your make!',\n                  },\n                ]}\n              >\n                <Select onChange={(e)=>{  console.log(\"hello\"), form.setFieldsValue({model:'', year:'', variant:''}), getParams(\"model\",{make:e}) }} showSearch>\n                  {makeList.map(i=>(\n                    <Option key={i} value={i}>{i}</Option>\n                  ))}\n                </Select>\n              </Form.Item>\n            </Col>\n            \n            <Col span={12}>\n              <Form.Item label=\"Model\" name=\"model\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input your model!',\n                  },\n                ]}\n              >\n                <Select onChange={(e)=>{  form.setFieldsValue({year:'', variant:''}),  getParams(\"year\",{make:form.getFieldValue('make'),model:e}) }} showSearch>\n                  {modelList.map(i=>(\n                    <Option key={i} value={i}>{i}</Option>\n                  ))}\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col span={12}>\n              <Form.Item label=\"Year\" name=\"year\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input your year!',\n                  },\n                ]}\n              >\n                <Select onChange={(e)=>{ form.setFieldsValue({variant:''}), getParams(\"variant\",{make:form.getFieldValue('make'),model:form.getFieldValue('model'),year:e}) }} showSearch>\n                  {yearList.map(i=>(\n                    <Option key={i} value={i}>{i}</Option>\n                  ))}\n                </Select>\n              </Form.Item>\n            </Col>\n\n            <Col span={12}>\n              <Form.Item\n                label=\"Variant\"\n                name=\"variant\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input your variant!',\n                  },\n                ]}\n              >\n                <Select>\n                  {variantList.map(i=>(\n                    <Option key={i} value={i}>{i}</Option>\n                  ))}\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col span={12}>\n              <Form.Item label=\"Mileage\" name=\"mileage\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input your mileage!',\n                  },\n                ]}\n              >\n                <Select onChange={(e)=>{}}>\n                  {mileageRange.map(i=>(\n                    <Option key={i} value={i}>{i}</Option>\n                  ))}\n                </Select>\n                {/* <InputNumber \n                  formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                  parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\n                  style={{width:'100%', textAlign:'right'}}\n                  min=\"0\"\n                  max=\"999999\"\n                  step=\"5000\" /> */}\n              </Form.Item>\n            </Col>\n\n            <Col span={12}>\n              <Form.Item\n                label=\"Remark\"\n                name=\"remark\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input your remark!',\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n          </Row>\n        \n          <Row>\n          <Col span={12}>\n          <Form.Item label=\"Price\" name=\"price\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your price!',\n              },\n            ]}\n          >\n            <InputNumber \n              formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n              parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\n              style={{width:'100%', textAlign:'right'}}\n              min=\"0\"\n              max=\"999999999\"\n              step=\"10000\" />\n          </Form.Item>\n          </Col>\n\n          <Col span={12}>\n              <Form.Item label=\"Engine Capacity\" name=\"engine\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input your engine capacity!',\n                  },\n                ]}\n              >\n                <InputNumber \n                  style={{width:'100%', textAlign:'right'}}\n                  min=\"0\"\n                  max=\"999999\"\n                  step=\"0.1\" />\n              </Form.Item>\n            </Col>\n\n          </Row>\n\n\n          <Form.Item {...layout2}\n            label=\"Title\" name=\"title\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Please input your title!',\n                },\n              ]}\n            >\n            <Input />\n          </Form.Item>\n\n          <Form.Item {...layout2} label=\"Description\" name=\"description\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your description!',\n              },\n            ]}\n          >\n            <TextArea rows={10} />\n          </Form.Item>\n\n          <Form.Item {...tailLayout}>\n            <Row>\n              <Col span={6}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  {props.mode==='update'?\"Edit\":\"Create\"}\n                </Button>\n              </Col>\n              <Col span={6}>\n                <Button onClick={() => { router.push('/ads') }} type=\"warning\">\n                  Cancel\n                </Button>\n              </Col>\n            </Row>\n          </Form.Item>\n        </Form>\n      </Card>\n    </>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}