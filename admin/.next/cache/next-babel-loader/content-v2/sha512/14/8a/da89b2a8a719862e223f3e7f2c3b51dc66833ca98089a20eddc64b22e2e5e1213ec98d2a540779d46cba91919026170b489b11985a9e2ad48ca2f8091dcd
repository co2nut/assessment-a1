{"ast":null,"code":"// import _ from 'lodash'\n// import axios from 'axios';\n// // import client from '../feathers'\n// const PAGESIZE = 30;\n// const distinctArr = (value, index, self) => {\n//   return self.indexOf(value) === index\n// }\n// export const carAdsFilter = async(searchInfo, skip)=> {\n//   // if all undefined, return empty\n//   return \n//   let searchCheck = false\n//   Object.keys(searchInfo).map(k=>{\n//     if(typeof(searchInfo[k]) === 'string'){\n//       searchInfo[k] = searchInfo[k].toLowerCase()\n//       searchCheck = true\n//     }\n//   })\n//   if(searchCheck === false){\n//     return await axios.get(`${client.io.io.uri}carAdsFilter`,\n//       {\n//         params: {\n//           // match,\n//           // businessType: businessType,\n//           limit: PAGESIZE + skip,\n//           skip: skip,\n//         }\n//       }\n//     )\n//     .then((res) => {\n//       console.log({res});\n//       let data = res.data.modelList\n//       let stateArr = []\n//       res.data.modelList.map(i => {\n//         stateArr = stateArr.concat(i.state)\n//       })\n//       stateArr = stateArr.filter(distinctArr)\n//       return { data, stateArr, products:res.data.data }\n//     })\n//     .catch((err) => {\n//       console.log(err)\n//       return null\n//     })\n//     // return { data:[], stateArr:[] }\n//   }else{\n//     let skip = 0\n//     // remove undefined & null\n//     let cloneProds = _.cloneDeep(_.pickBy(searchInfo, _.identity))\n//     let filter = {}\n//     let filterAnd = []\n//     // AND year\n//     if (cloneProds.year) {\n//       filterAnd = filterAnd.concat(\n//         { 'year': { $gte: cloneProds.year[0] } },\n//         { 'year': { $lte: cloneProds.year[1] } }\n//       )\n//       delete cloneProds.year\n//     }\n//     // AND price\n//     if (cloneProds.price) {\n//       filterAnd = filterAnd.concat(\n//         { 'price': { $gte: cloneProds.price[0] } },\n//         { 'price': { $lte: cloneProds.price[1] } }\n//       )\n//       delete cloneProds.price\n//     }\n//     // AND mileage\n//     if (cloneProds.mileage) {\n//       filterAnd = filterAnd.concat(\n//         { 'mileageFilter': { $gte: cloneProds.mileage[0] } },\n//         { 'mileageFilter': { $lte: cloneProds.mileage[1] } }\n//       )\n//       delete cloneProds.mileage\n//     }\n//     if (filterAnd.length > 0) {\n//       filter['$and'] = filterAnd\n//     }\n//     let match = { $match: { ...cloneProds, ...filter } }\n//     return await axios.get(`${client.io.io.uri}carAdsFilter`,\n//       {\n//         params: {\n//           match,\n//           // businessType: businessType,\n//           limit: PAGESIZE + skip,\n//           skip: skip,\n//         }\n//       }\n//     )\n//     .then((res) => {\n//       let data = res.data.modelList\n//       let stateArr = []\n//       res.data.modelList.map(i => {\n//         stateArr = stateArr.concat(i.state)\n//       })\n//       stateArr = stateArr.filter(distinctArr)\n//       return { data, stateArr, products:res.data.data }\n//     })\n//     .catch((err) => {\n//       console.log(err)\n//       return null\n//     })\n//   }\n// }","map":{"version":3,"sources":["/Users/soonsionglim/Development/etern/admin/api/carAdsFilter.js"],"names":[],"mappingssourcesContent":["// import _ from 'lodash'\n// import axios from 'axios';\n// // import client from '../feathers'\n\n// const PAGESIZE = 30;\n// const distinctArr = (value, index, self) => {\n//   return self.indexOf(value) === index\n// }\n\n// export const carAdsFilter = async(searchInfo, skip)=> {\n//   // if all undefined, return empty\n//   return \n//   let searchCheck = false\n//   Object.keys(searchInfo).map(k=>{\n//     if(typeof(searchInfo[k]) === 'string'){\n//       searchInfo[k] = searchInfo[k].toLowerCase()\n//       searchCheck = true\n//     }\n//   })\n//   if(searchCheck === false){\n//     return await axios.get(`${client.io.io.uri}carAdsFilter`,\n//       {\n//         params: {\n//           // match,\n//           // businessType: businessType,\n//           limit: PAGESIZE + skip,\n//           skip: skip,\n//         }\n//       }\n//     )\n//     .then((res) => {\n//       console.log({res});\n//       let data = res.data.modelList\n//       let stateArr = []\n//       res.data.modelList.map(i => {\n//         stateArr = stateArr.concat(i.state)\n//       })\n//       stateArr = stateArr.filter(distinctArr)\n//       return { data, stateArr, products:res.data.data }\n//     })\n//     .catch((err) => {\n//       console.log(err)\n//       return null\n//     })\n\n//     // return { data:[], stateArr:[] }\n//   }else{\n//     let skip = 0\n//     // remove undefined & null\n//     let cloneProds = _.cloneDeep(_.pickBy(searchInfo, _.identity))\n//     let filter = {}\n//     let filterAnd = []\n\n//     // AND year\n//     if (cloneProds.year) {\n//       filterAnd = filterAnd.concat(\n//         { 'year': { $gte: cloneProds.year[0] } },\n//         { 'year': { $lte: cloneProds.year[1] } }\n//       )\n//       delete cloneProds.year\n//     }\n\n//     // AND price\n//     if (cloneProds.price) {\n//       filterAnd = filterAnd.concat(\n//         { 'price': { $gte: cloneProds.price[0] } },\n//         { 'price': { $lte: cloneProds.price[1] } }\n//       )\n//       delete cloneProds.price\n//     }\n\n//     // AND mileage\n//     if (cloneProds.mileage) {\n//       filterAnd = filterAnd.concat(\n//         { 'mileageFilter': { $gte: cloneProds.mileage[0] } },\n//         { 'mileageFilter': { $lte: cloneProds.mileage[1] } }\n//       )\n//       delete cloneProds.mileage\n//     }\n\n//     if (filterAnd.length > 0) {\n//       filter['$and'] = filterAnd\n//     }\n\n//     let match = { $match: { ...cloneProds, ...filter } }\n\n//     return await axios.get(`${client.io.io.uri}carAdsFilter`,\n//       {\n//         params: {\n//           match,\n//           // businessType: businessType,\n//           limit: PAGESIZE + skip,\n//           skip: skip,\n//         }\n//       }\n//     )\n//     .then((res) => {\n//       let data = res.data.modelList\n//       let stateArr = []\n//       res.data.modelList.map(i => {\n//         stateArr = stateArr.concat(i.state)\n//       })\n//       stateArr = stateArr.filter(distinctArr)\n//       return { data, stateArr, products:res.data.data }\n//     })\n//     .catch((err) => {\n//       console.log(err)\n//       return null\n//     })\n//   }\n  \n// }"]},"metadata":{},"sourceType":"script"}