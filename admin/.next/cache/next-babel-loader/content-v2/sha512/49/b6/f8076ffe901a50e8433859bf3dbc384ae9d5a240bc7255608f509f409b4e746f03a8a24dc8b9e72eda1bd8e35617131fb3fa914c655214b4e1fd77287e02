{"ast":null,"code":"import _extends from \"/Users/soonsionglim/Development/etern/admin/node_modules/@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/Users/soonsionglim/Development/etern/admin/components/users/form.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { Layout, Card, Row, Col, Form, Input, Button, Alert } from 'antd';\nimport SideBar from '../../components/SideBar';\nimport axios from \"axios\";\nimport Cookie from \"js-cookie\";\nimport { API_URL, login } from '../../api';\nvar layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nvar tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\n\nvar App = function App(props) {\n  _s();\n\n  var router = useRouter();\n\n  var _useState = useState(''),\n      formErr = _useState[0],\n      setFormErr = _useState[1];\n\n  var onFinish = function onFinish(values) {\n    var password = values.password,\n        confirmPassword = values.confirmPassword,\n        username = values.username;\n\n    if (password !== confirmPassword) {\n      return setFormErr(\"Password & Confirm Password is not same\");\n    }\n\n    if (props.mode === 'update') {\n      return axios.put(\"\".concat(API_URL, \"users/\").concat(props.data._id), {\n        username: username,\n        password: password,\n        roles: ['user'],\n        status: \"1\"\n      }, {\n        headers: {\n          'Authorization': \"Bearer \".concat(JSON.parse(Cookie.get(\"userInfo\")).accessToken)\n        }\n      }).then(function (res) {\n        if (res.data) {\n          router.push('/users');\n        }\n      })[\"catch\"](function (err) {\n        setFormErr(\"Username already exists\");\n      });\n    }\n\n    axios.post(\"\".concat(API_URL, \"users\"), {\n      username: username,\n      password: password,\n      roles: ['user'],\n      status: \"1\"\n    }, {\n      headers: {\n        'Authorization': \"Bearer \".concat(JSON.parse(Cookie.get(\"userInfo\")).accessToken)\n      }\n    }).then(function (res) {\n      if (res.data) {\n        router.push('/users');\n      }\n    })[\"catch\"](function (err) {\n      setFormErr(\"Username already exists\");\n      console.log(err);\n    });\n  };\n\n  var onFinishFailed = function onFinishFailed(errorInfo) {\n    console.log('Failed:', errorInfo);\n  };\n\n  var _props$data = props.data,\n      username = _props$data.username,\n      password = _props$data.password;\n  return __jsx(React.Fragment, null, formErr ? __jsx(Alert, {\n    message: formErr,\n    closable: true,\n    type: \"error\",\n    showIcon: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 18\n    }\n  }) : null, __jsx(Card, {\n    style: {\n      marginTop: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, __jsx(Form, _extends({}, layout, {\n    initialValues: {\n      username: username,\n      password: password,\n      confirmPassword: password\n    },\n    name: \"basic\",\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), __jsx(Form.Item, {\n    label: \"Username\",\n    name: \"username\",\n    rules: [{\n      required: true,\n      message: 'Please input your username!'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  })), __jsx(Form.Item, {\n    label: \"Password\",\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: 'Please input your password!'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, __jsx(Input.Password, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  })), __jsx(Form.Item, {\n    label: \"Confirm Password\",\n    name: \"confirmPassword\",\n    rules: [{\n      required: true,\n      message: 'Please input confirm password!'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, __jsx(Input.Password, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  })), __jsx(Form.Item, _extends({}, tailLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }), __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    span: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, props.mode === 'update' ? \"Update\" : \"Create\")), __jsx(Col, {\n    span: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      router.push('/users');\n    },\n    type: \"warning\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, \"Cancel\")))))));\n};\n\n_s(App, \"4nRoYR+Z10aXrpTcjVsKXUvSahM=\", false, function () {\n  return [useRouter];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/soonsionglim/Development/etern/admin/components/users/form.js"],"names":["useState","Head","useRouter","Layout","Card","Row","Col","Form","Input","Button","Alert","SideBar","axios","Cookie","API_URL","login","layout","labelCol","span","wrapperCol","tailLayout","offset","App","props","router","formErr","setFormErr","onFinish","values","password","confirmPassword","username","mode","put","data","_id","roles","status","headers","JSON","parse","get","accessToken","then","res","push","err","post","console","log","onFinishFailed","errorInfo","marginTop","required","message"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport Head from 'next/head'\nimport { useRouter } from 'next/router'\nimport { Layout, Card, Row, Col, Form, Input, Button, Alert } from 'antd';\nimport SideBar from '../../components/SideBar'\nimport axios from \"axios\"\nimport Cookie from \"js-cookie\";\nimport { API_URL, login } from '../../api'\n\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nconst App = (props) => {\n  const router = useRouter()\n  const [formErr, setFormErr] = useState('')\n  \n  const onFinish = (values) => {\n    const { password, confirmPassword, username }  = values\n    if( password !== confirmPassword ){\n      return setFormErr(\"Password & Confirm Password is not same\")\n    }\n\n    if(props.mode === 'update'){\n      return axios.put(`${API_URL}users/${props.data._id}`,\n        {\n          username,\n          password,\n          roles:['user'],\n          status:\"1\"\n        },\n        {\n          headers: {\n            'Authorization': `Bearer ${JSON.parse(Cookie.get(\"userInfo\")).accessToken}`\n          }\n        }\n      )\n      .then((res) => {\n        if(res.data){\n          router.push('/users')\n        }\n      })\n      .catch((err) => {\n        setFormErr(\"Username already exists\")\n      })\n    }\n    \n    axios.post(`${API_URL}users`,\n      {\n        username,\n        password,\n        roles:['user'],\n        status:\"1\"\n      },\n      {\n        headers: {\n          'Authorization': `Bearer ${JSON.parse(Cookie.get(\"userInfo\")).accessToken}`\n        }\n      }\n    )\n    .then((res) => {\n      if(res.data){\n        router.push('/users')\n      }\n    })\n    .catch((err) => {\n      setFormErr(\"Username already exists\")\n      console.log(err)\n    })\n\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n  const {username, password} = props.data\n  return (\n    <>\n      {formErr ? <Alert message={formErr} closable type=\"error\" showIcon /> : null}\n      <Card style={{ marginTop: 20 }}>\n        <Form\n          {...layout}\n          initialValues={{ username, password:password, confirmPassword:password}}\n          name=\"basic\"\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n        >\n          <Form.Item\n            label=\"Username\"\n            name=\"username\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your username!',\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Password\"\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your password!',\n              },\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Confirm Password\"\n            name=\"confirmPassword\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input confirm password!',\n              },\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Form.Item {...tailLayout}>\n            <Row>\n              <Col span={6}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  {props.mode==='update'?\"Update\":\"Create\"}\n                </Button>\n              </Col>\n              <Col span={6}>\n                <Button onClick={() => { router.push('/users') }} type=\"warning\">\n                  Cancel\n                </Button>\n              </Col>\n            </Row>\n          </Form.Item>\n        </Form>\n      </Card>\n    </>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}